# -----------------------------------------------------------------------------
# MectSuite Qt Embedded SDK builder (i.MX28 Mect TP/TPAC target)
#
# vedi ./Makefile

include Makefile_common

# ----------------------------------------------------------------------------- i.MX28 target --------- 
.PHONY: all clean_all distclean_all

MECT_PREFIX  := /opt/Qt$(MECT_SUITE_QT)/imx28
MECT_SOURCES := $(CURDIR)/src_imx28
MECT_PATCHES := $(CURDIR)/patches
MECT_MKSPECS := $(CURDIR)/mkspecs

all: \
	downloads toolchain \
	qt \
	## NB: no openssl qwt qt_plugins
	@echo "---------> done $@"

clean_all: clean_toolchain
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make clean
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make confclean
	@echo "---------> done $@"

distclean_all: distclean_toolchain
	rm -rf $(MECT_SOURCES)
	sudo rm -rf $(MECT_PREFIX)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- i.MX28 cross toolchain --------- 
.PHONY: toolchain clean_toolchain distclean_toolchain

export MECT_CODESOURCERY_DIR := /opt/CodeSourcery
export MECT_CODESOURCERY_PRE := arm-2011.03

MECT_CROSS_COMPILE := $(MECT_CODESOURCERY_DIR)/bin/arm-none-linux-gnueabi-

# https://doc.qt.io/archives/qt-4.8/requirements-x11.html
# 	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev
MECT_PACKAGES:= \
	rsync wget dos2unix \
	libc6:i386 \
	gdbserver
	# NB: no libssl-dev, it's openssl1.1
	# NB: no libqwt-dev, it's qwt6.1.4-1

toolchain: packages $(MECT_CODESOURCERY_DIR)/bin/arm-none-linux-gnueabi-g++ $(MECT_PREFIX)/rootfs/usr/lib/libc.so
	@echo "---------> done $@"

packages:
	# prepare multi-arch i386 on amd64
	sudo dpkg --add-architecture i386
	sudo apt-get update
	# install amd64 and i386 packages 
	sudo aptitude install $(MECT_PACKAGES)
	@echo "---------> done $@"

$(MECT_CODESOURCERY_DIR)/bin/arm-none-linux-gnueabi-g++:
	# NB: these are i386 executables
	sudo rm -rf /opt/$(MECT_CODESOURCERY_PRE) $(MECT_CODESOURCERY_DIR)
	sudo tar -C /opt -xjf $(MECT_DOWNLOADF)/arm-2011.03-41-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2
	sudo mv /opt/$(MECT_CODESOURCERY_PRE) $(MECT_CODESOURCERY_DIR)
	@echo "---------> done $@"

$(MECT_PREFIX)/rootfs/usr/lib/libc.so:
	sudo mkdir -p $(MECT_PREFIX)
	sudo tar -C $(MECT_PREFIX) -xzf $(MECT_DOWNLOADF)/rootfs_dev_$(MECT_SUITE_RELEASE).tar.gz
	@echo "---------> done $@"

clean_toolchain: 
	# sudo aptitude remove $(MECT_PACKAGES)
	sudo rm -rf /opt/$(MECT_CODESOURCERY_PRE) $(MECT_CODESOURCERY_DIR)
	@echo "---------> done $@"

distclean_toolchain: 
	# sudo aptitude purge $(MECT_PACKAGES)
	sudo rm -rf /opt/$(MECT_CODESOURCERY_PRE) $(MECT_CODESOURCERY_DIR)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- OpenSSL 1.0 --------- 
	
# ----------------------------------------------------------------------------- Qt --------- 
.PHONY: qt

MECT_QT_PLATFORM  := mectsuite-desktop
MECT_QT_XPLATFORM := mectsuite-device-imx28
MECT_QT_EMBEDDED  := arm
MECT_QT_ARCH      := arm

qt: \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/bin/qmake \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT) \
	$(MECT_PREFIX)/bin/qmake \
	$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT)
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzf $(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).tar.gz
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1394522957.patch
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823825.patch
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823826.patch
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 < $(MECT_PATCHES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).patch
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 < $(MECT_PATCHES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)_imx28.patch
	rsync -Hax $(MECT_MKSPECS)/$(MECT_QT_PLATFORM)/      $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/mkspecs/$(MECT_QT_PLATFORM)/
	rsync -Hax $(MECT_MKSPECS)/$(MECT_QT_XPLATFORM)/      $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/mkspecs/$(MECT_QT_XPLATFORM)/
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/bin/qmake \
$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile: $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure
	# https://doc.qt.io/archives/qt-4.8/configure-options.html
	# vedi qt_configure_help.txt vs qt_configure_embedded_help.txt
	#
	# qt-everywhere-opensource-src-4.8.7/doc/src/network-programming/ssl.qdoc
	# OPENSSL_LIBS='-L$(MECT_PREFIX)/ssl/lib -lssl -lcrypto'
	#
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ \
		&& ./configure \
		-prefix $(MECT_PREFIX) -prefix-install \
		\
		-release \
		-opensource -confirm-license \
	        -shared \
		-fast \
		-no-largefile \
		-no-system-proxies \
		-no-exceptions \
	        -no-accessibility \
		-no-stl \
		-qt-sql-sqlite \
		-no-sql-odbc \
		-qt-sql-mysql -mysql_config please-no-host-mysql \
	        -no-qt3support \
		-no-xmlpatterns \
		-no-multimedia \
		-audio-backend \
		-no-phonon -no-phonon-backend \
		-no-svg \
		-no-webkit \
		-no-javascript-jit \
		-no-script \
		-no-scripttools \
		-no-declarative \
		-no-declarative-debug \
		-platform $(MECT_QT_PLATFORM) \
		\
		-no-3dnow \
		-no-mmx \
		-no-sse \
		-no-sse2 \
		-no-sse3 \
		-no-ssse3 \
		-no-neon \
		\
		-qt-zlib \
		-no-libtiff \
		-qt-libpng \
		-no-libmng \
		-qt-libjpeg \
		-openssl \
		-nomake examples -nomake demos \
		-rpath \
		-silent \
		-no-optimized-qmake \
		-no-nis \
		-no-cups \
		-iconv \
		-pch \
		-no-dbus \
		-no-separate-debug-info \
		\
		-embedded $(MECT_QT_EMBEDDED) \
		-xplatform $(MECT_QT_XPLATFORM) \
		-little-endian \
		-host-little-endian \
		-qt-freetype \
		-no-opengl \
		-depths 8,16,18,32 \
		-qt-gfx-qvfb \
		-qt-gfx-linuxfb \
		-qt-gfx-transformed \
		-qt-gfx-vnc \
		-qt-kbd-tty \
		-qt-mouse-linuxtp \
		-no-glib \
		\
		-no-s60 \
		-no-icu \
		# -fontconfig 
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile
	+cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT)
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && sudo make install
	@echo "---------> done $@"

$(MECT_PREFIX)/bin/qmake: $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/bin/qmake
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && sudo make install_qmake
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QWT --------- 

# ----------------------------------------------------------------------------- QtCreator --------- 

# ----------------------------------------------------------------------------- CTE plugin --------- 

# ----------------------------------------------------------------------------- CTC exe --------- 

# ----------------------------------------------------------------------------- ATCM templates --------- 

# ----------------------------------------------------------------------------- ATCM Designer plugins ------

# ----------------------------------------------------------------------------- ATCM target plugins -------- 
	
# -----------------------------------------------------------------------------
