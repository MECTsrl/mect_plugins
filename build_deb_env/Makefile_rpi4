# -----------------------------------------------------------------------------
# MectSuite Qt Embedded SDK builder (RaspberryPi4 target)
#
# vedi ./Makefile

include Makefile_common

# ----------------------------------------------------------------------------- Rpi4 target --------- 
.PHONY: all clean_all distclean_all

MECT_PREFIX  := /opt/Qt$(MECT_SUITE_QT)/rpi4
MECT_SOURCES := $(CURDIR)/src_rpi4
MECT_PATCHES := $(CURDIR)/patches

all: \
	downloads toolchain \
	openssl qt \
	qwt \
	\
	qt_plugins
	@echo "---------> done $@"

clean_all: # clean_toolchain
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make clean
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make confclean
	@echo "---------> done $@"

distclean_all: # distclean_toolchain
	rm -rf $(MECT_SOURCES)
	sudo rm -rf $(MECT_PREFIX)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- Rpi4 cross toolchain --------- 
.PHONY: toolchain clean_toolchain distclean_toolchain

MECT_CROSS_COMPILE := armhf-linux-gnueabi-

# https://doc.qt.io/archives/qt-4.8/requirements-x11.html
# 	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev
MECT_PACKAGES:= \
	rsync wget \
	$(MECT_CROSS_COMPILE)gcc \
	$(MECT_CROSS_COMPILE)g++ \
	\
	$(MECT_CROSS_COMPILE)gdb \
	gdbserver
	# NB: no libssl-dev, it's openssl1.1
	# NB: no libqwt-dev, it's qwt6.1.4-1

toolchain: 
	sudo aptitude install $(MECT_PACKAGES)
	@echo "---------> done $@"

clean_toolchain: 
	sudo aptitude remove $(MECT_PACKAGES)
	@echo "---------> done $@"

distclean_toolchain: 
	sudo aptitude purge $(MECT_PACKAGES)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- OpenSSL 1.0 --------- 
.PHONY: openssl

openssl: \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X) \
	$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzvf $(MECT_DOWNLOADF)/openssl-$(MECT_SUITE_OPENSSL).tar.gz
	rm -f $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile # NB: there was an old Makefile :(
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile: $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && ./Configure \
		--cross-compile-prefix $(MECT_CROSS_COMPILE) \
		--prefix=$(MECT_PREFIX) \
		linux-generic32 shared no-asm -DL_ENDIAN
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile
	+cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X)
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && sudo make install_sw
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- Qt --------- 
.PHONY: qt

MECT_QT_EMBEDDED  := arm
MECT_QT_ARCH      := arm # FIXME: armhf?
MECT_QT_PLATFORM  := linux-g++
MECT_QT_XPLATFORM := qws/linux-arm-gnueabi-g++ 

qt: \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT) \
	$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT)
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzvf $(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).tar.gz
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1394522957.patch
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823825.patch
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823826.patch
	#
	# https://stackoverflow.com/questions/10354371/stdtr1-has-not-been-declared
	# https://bugreports.qt.io/browse/QTBUG-41361#comment-257906
	# also ./src/3rdparty/javascriptcore/JavaScriptCore/JavaScriptCore.pri
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) &&  \
		echo "QMAKE_CXXFLAGS = \$$\$$QMAKE_CFLAGS -std=gnu++98 -Wno-error=class-memaccess" \
	      	>> ./mkspecs/linux-g++/qmake.conf
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile: $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure
	# https://doc.qt.io/archives/qt-4.8/configure-options.html
	# vedi qt_configure_help.txt vs qt_configure_embedded_help.txt
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ \
		&& ./configure \
		-prefix $(MECT_PREFIX) -prefix-install \
		\
		-release \
		-opensource -confirm-license \
	        -shared \
	        -fast \
		-no-largefile \
		-no-system-proxies \
		-no-exceptions \
	        -no-accessibility \
		-no-stl \
		-qt-sql-sqlite \
		-qt-sql-odbc \
		-qt-sql-mysql \
	        -no-qt3support \
		-no-xmlpatterns \
		-no-multimedia \
		-audio-backend \
		-no-phonon -no-phonon-backend \
		-no-svg \
		-no-webkit \
	        -no-javascript-jit \
	        -no-script \
	        -no-scripttools \
		-no-declarative \
		-no-declarative-debug \
		-platform $(MECT_QT_PLATFORM) \
		\
		-no-3dnow \
		-no-mmx \
	        -no-sse \
	        -no-sse2 \
	        -no-sse3 \
	        -no-ssse3 \
		\
		-qt-zlib \
		-no-libtiff \
		-qt-libpng \
		-no-libmng \
		-qt-libjpeg \
		-openssl -I $(MECT_PREFIX)/include \
		-nomake examples -nomake demos \
		-rpath \
		-silent \
		-no-optimized-qmake \
		-no-nis \
		-no-cups \
		-iconv \
		-pch \
		-dbus \
		-no-separate-debug-info \
		\
		-embedded $(MECT_QT_EMBEDDED) \
		-xplatform $(MECT_QT_XPLATFORM) \
		-little-endian \
	        -host-little-endian \
		-system-freetype \
		-no-opengl \
		-depths 8,16,18,32 \
		-qt-gfx-qvfb \
	        -qt-gfx-linuxfb \
	        -qt-gfx-transformed \
	        -qt-gfx-vnc \
	        -qt-kbd-tty \
		-qt-mouse-tslib \
		-glib \
		\
		-no-s60 \
		-no-icu \
		# -fontconfig 
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile
	+cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT)
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && sudo make install
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QWT --------- 
.PHONY: qwt

qwt: \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X) \
	$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xjvf $(MECT_DOWNLOADF)/qwt-$(MECT_SUITE_QWT).tar.bz2
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && patch -p1 < $(MECT_PATCHES)/qwt_embedded.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile: $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && $(MECT_PREFIX)/bin/qmake qwt.pro  # -spec qws/linux-g++-mx
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile
	# all: sub-src-all-ordered sub-textengines-all-ordered sub-doc-all-ordered sub-designer-all-ordered sub-examples-all-ordered FORCE
	+cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && make sub-src-all-ordered sub-textengines-all-ordered -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && sudo make install # NB: no INSTALL_ROOT=$(MECT_PREFIX) vedi qwt.patch
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- ATCM target plugins --------- 
.PHONY: qt_plugins

qt_plugins: \
	$(MECT_SOURCES)/qt_atcm.pro \
	$(MECT_SOURCES)/Makefile \
	$(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0 \
	$(MECT_PREFIX)/plugins/libATCMplugin.so.1.0.0
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_atcm.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Havx ../qt_plugins/ $(MECT_SOURCES)/qt_plugins/
	rsync -Havx ../qt_library/ $(MECT_SOURCES)/qt_library/
	cp -a ../qt_environment.pri ../qt_designer_environment.pri $(MECT_SOURCES)/
	cp -a ../qt_atcm.pro $(MECT_SOURCES)/
	cd $(MECT_SOURCES)/ && patch -p1 < $(MECT_PATCHES)/qt_plugins_embedded_host.patch # NB: no cd $(MECT_SOURCES)/qt_plugins/
	@echo "---------> done $@"

$(MECT_SOURCES)/Makefile: $(MECT_SOURCES)/qt_atcm.pro
	cd $(MECT_SOURCES)/ \
		&& $(MECT_PREFIX)/bin/qmake -r qt_atcm.pro \
		   QT_INSTALL_PLUGINS=$(MECT_PREFIX)/plugins \
		   -config store -config trend -config recipe -config alarms \
		   CONFIG+=release DEFINES+=ATCM_VERSION=\"$(MECT_SUITE_RELEASE)\"
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0: $(MECT_SOURCES)/Makefile
	#+cd $(MECT_SOURCES)/ && make -j $(shell nproc) # NB: +
	cd $(MECT_SOURCES)/ && make -j1
	@echo "---------> done $@"

$(MECT_PREFIX)/plugins/libATCMplugin.so.1.0.0: $(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0
	sudo mkdir -p $(MECT_PREFIX)/plugins
	cd $(MECT_SOURCES)/ && sudo make INSTALL_ROOT=$(MECT_PREFIX) install
	@echo "---------> done $@"

# -----------------------------------------------------------------------------
