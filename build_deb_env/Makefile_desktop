# -----------------------------------------------------------------------------
# MectSuite Qt Embedded SDK builder (Desktop)
# 
# vedi ./Makefile

include Makefile_common

# ----------------------------------------------------------------------------- desktop target --------- 
.PHONY: all clean_all distclean_all

MECT_PREFIX  := /opt/qt-desktop-$(MECT_SUITE_QT)
MECT_SOURCES := $(CURDIR)/src_desktop
MECT_PATCHES := $(CURDIR)/patches

all: \
	downloads toolchain \
	openssl qt \
	qwt \
	qtcreator \
	cte_plugin ctc_exe qt_templates qt_designer_plugins 
	@echo "---------> done $@"

clean_all: # clean_toolchain
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make clean
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make confclean
	cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/ && make confclean
	@echo "---------> done $@"

distclean_all: # distclean_toolchain
	rm -rf $(MECT_SOURCES)
	sudo rm -rf $(MECT_PREFIX)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- desktop native toolchain --------- 
.PHONY: toolchain clean_toolchain distclean_toolchain

# https://doc.qt.io/archives/qt-4.8/requirements-x11.html
# 	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev
MECT_PACKAGES:= \
	rsync wget \
	gcc \
	g++ \
	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev \
	libsqlite3-dev libmariadb-dev-compat unixodbc-dev \
	libcups2-dev \
	libglib2.0-dev \
	libdbus-1-dev \
	gdb \
	gdbserver
	# NB: no libssl-dev, it's openssl1.1
	# NB: no libqwt-dev, it's qwt6.1.4-1

toolchain: 
	sudo aptitude install $(MECT_PACKAGES)
	@echo "---------> done $@"

clean_toolchain: 
	sudo aptitude remove $(MECT_PACKAGES)
	@echo "---------> done $@"

distclean_toolchain: 
	sudo aptitude purge $(MECT_PACKAGES)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- OpenSSL 1.0 --------- 
.PHONY: openssl

openssl: \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X) \
	$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzvf $(MECT_DOWNLOADF)/openssl-$(MECT_SUITE_OPENSSL).tar.gz
	rm -f $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile # NB: there was an old Makefile :(
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile: $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && ./Configure \
		--prefix=$(MECT_PREFIX) \
		linux-generic32 shared no-asm -DL_ENDIAN
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile
	+cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X)
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && sudo make install_sw
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- Qt --------- 
.PHONY: qt

# MECT_QT_EMBEDDED  :=
# MECT_QT_ARCH      :=
MECT_QT_PLATFORM  := linux-g++
# MECT_QT_XPLATFORM :=

qt: \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT) \
	$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT)
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzvf $(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).tar.gz
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1394522957.patch
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823825.patch
	# NB: no cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 <$(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)-1420823826.patch
	#
	# https://stackoverflow.com/questions/10354371/stdtr1-has-not-been-declared
	# https://bugreports.qt.io/browse/QTBUG-41361#comment-257906
	# also ./src/3rdparty/javascriptcore/JavaScriptCore/JavaScriptCore.pri
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) &&  \
		echo "QMAKE_CXXFLAGS = \$$\$$QMAKE_CFLAGS -std=gnu++98 -Wno-error=class-memaccess" \
	      	>> ./mkspecs/linux-g++/qmake.conf
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile: $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure
	# https://doc.qt.io/archives/qt-4.8/configure-options.html
	# vedi qt_configure_help.txt vs qt_configure_embedded_help.txt
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ \
		&& ./configure \
		-prefix $(MECT_PREFIX) -prefix-install \
		\
		-release \
	        -opensource -confirm-license \
	        -shared \
	        -fast \
		-largefile \
		-no-system-proxies \
		-exceptions \
	        -accessibility \
		-stl \
		-plugin-sql-sqlite \
		-plugin-sql-odbc \
		-plugin-sql-mysql \
		-no-qt3support \
		-xmlpatterns \
		-multimedia \
		-audio-backend \
		-no-phonon -no-phonon-backend \
		-svg \
		-no-webkit \
		-javascript-jit \
		-script \
		-scripttools \
		-declarative \
		-declarative-debug \
		-platform $(MECT_QT_PLATFORM) \
		\
		-no-3dnow \
		\
		-qt-zlib \
		-system-libtiff \
		-system-libpng \
		-no-libmng \
		-system-libjpeg \
		-openssl -I $(MECT_PREFIX)/include \
		-nomake examples -nomake demos \
		-rpath \
		-silent \
		-no-optimized-qmake \
		-no-nis \
		-cups \
		-iconv \
		-pch \
		-dbus \
		-no-separate-debug-info \
		\
		-no-gtkstyle \
		-no-nas-sound \
		-no-opengl \
		-no-openvg \
		-no-sm \
		-xshape \
		-no-xvideo \
		-xsync \
		-no-xinerama \
		-xcursor \
		-xfixes \
		-xrandr \
		-xrender \
		-mitshm \
		-fontconfig \
		-xinput \
		-xkb \
		\
		-no-s60
		# -no-vcproj -no-cetest -no-dsp
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile
	+cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT)
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && sudo make install
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QWT --------- 
.PHONY: qwt

qwt: \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X) \
	$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xjvf $(MECT_DOWNLOADF)/qwt-$(MECT_SUITE_QWT).tar.bz2
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && patch -p1 < $(MECT_PATCHES)/qwt_desktop.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile: $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && $(MECT_PREFIX)/bin/qmake qwt.pro
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile
	# all: sub-src-all-ordered sub-textengines-all-ordered sub-doc-all-ordered sub-designer-all-ordered sub-examples-all-ordered FORCE
	+cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && make all -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && sudo make install # NB: no INSTALL_ROOT=$(MECT_PREFIX) vedi qwt.patch
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QtCreator --------- 
.PHONY: qtcreator

# vedi ../setup/QtProject/QtCreator.ini
# 	...
# 	[ProjectExplorer]
#	Settings\EnvironmentId=@ByteArray({29281f32-36f7-41e9-9987-9d4d0f3263a7})

qtcreator: \
	$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/qtcreator.pro \
	$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/Makefile \
	$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/bin/qtcreator \
	$(MECT_PREFIX)/bin/qtcreator
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/qtcreator.pro:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzvf $(MECT_DOWNLOADF)/qt-creator-$(MECT_SUITE_QTCREATOR)-src.tar.gz
	# cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src && patch -p1 <$(MECT_DOWNLOADF)/qt-creator-$(MECT_SUITE_QTCREATOR)-src-XXXXXXX.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/Makefile: $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/qtcreator.pro
	cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/ && $(MECT_PREFIX)/bin/qmake -r 
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/bin/qtcreator: $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/Makefile
	+cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/bin/qtcreator: $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/bin/qtcreator
	cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/ && sudo make INSTALL_ROOT=$(MECT_PREFIX) install
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- CTE plugin --------- 
.PHONY: cte_plugin

cte_plugin: \
	$(MECT_SOURCES)/cte/cte.pro \
	$(MECT_SOURCES)/cte/Makefile \
	$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/lib/qtcreator/plugins/Mect/libCTE.so \
	$(MECT_PREFIX)/lib/qtcreator/plugins/Mect/libCTE.so
	@echo "---------> done $@"

$(MECT_SOURCES)/cte/cte.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Havx ../cte/ $(MECT_SOURCES)/cte/
	cd $(MECT_SOURCES)/cte/ && patch -p1 < $(MECT_PATCHES)/cte.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/cte/Makefile: $(MECT_SOURCES)/cte/cte.pro
	cd $(MECT_SOURCES)/cte/ \
		&& QTC_SOURCE=$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src \
		   QTC_BUILD=$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src \
		$(MECT_PREFIX)/bin/qmake -r \
		CONFIG+=release DEFINES+=ATCM_VERSION=\"$(MECT_SUITE_RELEASE)\"
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/lib/qtcreator/plugins/Mect/libCTE.so: $(MECT_SOURCES)/cte/Makefile
	+cd $(MECT_SOURCES)/cte/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/qtcreator/plugins/Mect/libCTE.so: $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/lib/qtcreator/plugins/Mect/libCTE.so
	sudo mkdir -p $(MECT_PREFIX)/lib/qtcreator/plugins/Mect
	cd $(MECT_SOURCES)/qt-creator-$(MECT_SUITE_QTCREATOR)-src/lib/qtcreator/plugins/Mect \
		&& sudo cp libCTE.so CTE.pluginspec $(MECT_PREFIX)/lib/qtcreator/plugins/Mect/
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- CTC exe --------- 
.PHONY: ctc_exe

ctc_exe: \
	$(MECT_SOURCES)/ctc/ctc.pro \
	$(MECT_SOURCES)/ctc/Makefile \
	$(MECT_SOURCES)/ctc/ctc \
	$(MECT_PREFIX)/bin/ctc
	@echo "---------> done $@"

$(MECT_SOURCES)/ctc/ctc.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Havx ../ctc/ $(MECT_SOURCES)/ctc/
	# cd $(MECT_SOURCES)/ctc/ && patch -p1 < $(MECT_PATCHES)/ctc.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/ctc/Makefile: $(MECT_SOURCES)/ctc/ctc.pro
	cd $(MECT_SOURCES)/ctc/ \
		&& $(MECT_PREFIX)/bin/qmake -r \
		CONFIG+=release DEFINES+=ATCM_VERSION=\"$(MECT_SUITE_RELEASE)\"
	@echo "---------> done $@"

$(MECT_SOURCES)/ctc/ctc: $(MECT_SOURCES)/ctc/Makefile
	+cd $(MECT_SOURCES)/ctc/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/bin/ctc: $(MECT_SOURCES)/ctc/ctc
	sudo mkdir -p $(MECT_PREFIX)/bin
	cd $(MECT_SOURCES)/ctc \
		&& sudo cp ctc $(MECT_PREFIX)/bin/
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- ATCM templates --------- 
.PHONY: qt_templates

qt_templates: \
	$(MECT_SOURCES)/qt_templates/qt_templates.pro \
	$(MECT_PREFIX)/share/qtcreator/templates/wizards/ATCM-template-project/project.pro 
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_templates/qt_templates.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Havx ../qt_templates/ $(MECT_SOURCES)/qt_templates/
	cd $(MECT_SOURCES)/qt_templates/ && patch -p1 < $(MECT_PATCHES)/qt_templates.patch
	@echo "---------> done $@"

$(MECT_PREFIX)/share/qtcreator/templates/wizards/ATCM-template-project/project.pro: $(MECT_SOURCES)/qt_templates/qt_templates.pro
	sudo mkdir -p $(MECT_PREFIX)/share/qtcreator/templates/wizards
	cd $(MECT_SOURCES)/qt_templates \
		&& sudo rsync -avx ./ $(MECT_PREFIX)/share/qtcreator/templates/wizards/ --exclude=qt_templates.pro

# ----------------------------------------------------------------------------- ATCM Designer plugins --------- 
.PHONY: qt_designer_plugins

qt_designer_plugins: \
	$(MECT_SOURCES)/qt_plugins/qt_designer_plugins.pro \
	$(MECT_SOURCES)/qt_plugins/Makefile \
	$(MECT_SOURCES)/qt-plugins/ATCMlabel/libatcmlabelplugin.so \
	$(MECT_PREFIX)/plugins/designer/libatcmlabelplugin.so
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_plugins/qt_designer_plugins.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Havx ../qt_plugins/ $(MECT_SOURCES)/qt_plugins/
	rsync -Havx ../qt_library/ $(MECT_SOURCES)/qt_library/
	cp -a ../qt_environment.pri ../qt_designer_environment.pri $(MECT_SOURCES)/
	cd $(MECT_SOURCES)/ && patch -p1 < $(MECT_PATCHES)/qt_plugins_desktop.patch # NB: no cd $(MECT_SOURCES)/qt_plugins/
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_plugins/Makefile: $(MECT_SOURCES)/qt_plugins/qt_designer_plugins.pro
	cd $(MECT_SOURCES)/qt_plugins/ \
		&& $(MECT_PREFIX)/bin/qmake -r qt_designer_plugins.pro \
		   QT_INSTALL_PLUGINS=$(MECT_PREFIX)/plugins/designer \
		   -config store -config trend -config recipe -config alarms \
		   CONFIG+=release DEFINES+=ATCM_VERSION=\"$(MECT_SUITE_RELEASE)\"
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-plugins/ATCMlabel/libatcmlabelplugin.so: $(MECT_SOURCES)/qt_plugins/Makefile
	+cd $(MECT_SOURCES)/qt_plugins/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/plugins/designer/libatcmlabelplugin.so: $(MECT_SOURCES)/qt-plugins/ATCMlabel/libatcmlabelplugin.so
	sudo mkdir -p $(MECT_PREFIX)/plugins/designer
	#cd $(MECT_SOURCES)/qt_plugins/ \
	#	&& sudo cp libATCM*.so $(MECT_PREFIX)/plugins/designer/
	cd $(MECT_SOURCES)/qt_plugins/ && sudo make install
	@echo "---------> done $@"

# -----------------------------------------------------------------------------
