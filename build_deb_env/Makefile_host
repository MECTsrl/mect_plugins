# -----------------------------------------------------------------------------
# MectSuite Qt Embedded SDK builder (Debian/amd64 Host target)
#
# vedi ./Makefile

include Makefile_common

# ----------------------------------------------------------------------------- host target --------- 
.PHONY: all clean_all distclean_all

MECT_PREFIX  := /opt/Qt$(MECT_SUITE_QT)/host
MECT_SOURCES := $(CURDIR)/src_host
MECT_PATCHES := $(CURDIR)/patches
MECT_MKSPECS := $(CURDIR)/mkspecs

all: \
	downloads toolchain \
	openssl qt \
	qwt \
	qt_plugins
	@echo "---------> done $@"

clean_all: # clean_toolchain
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make clean
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make confclean
	@echo "---------> done $@"

distclean_all: # distclean_toolchain
	rm -rf $(MECT_SOURCES)
	sudo rm -rf $(MECT_PREFIX)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- host native toolchain --------- 
.PHONY: toolchain clean_toolchain distclean_toolchain

# https://doc.qt.io/archives/qt-4.8/requirements-x11.html
# 	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev
MECT_PACKAGES:= \
	rsync wget dos2unix \
	gcc \
	g++ \
	libfontconfig1-dev libfreetype6-dev libx11-dev libxcursor-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxrandr-dev libxrender-dev \
	libsqlite3-dev libmariadb-dev-compat unixodbc-dev \
	libcups2-dev \
	libglib2.0-dev \
	libdbus-1-dev \
	gdb \
	gdbserver
	# NB: no libssl-dev, it's openssl1.1
	# NB: no libqwt-dev, it's qwt6.1.4-1

toolchain: 
	sudo aptitude install $(MECT_PACKAGES)
	@echo "---------> done $@"

clean_toolchain: 
	sudo aptitude remove $(MECT_PACKAGES)
	@echo "---------> done $@"

distclean_toolchain: 
	sudo aptitude purge $(MECT_PACKAGES)
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- OpenSSL 1.0 --------- 
.PHONY: openssl

openssl: \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile \
	$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X) \
	$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzf $(MECT_DOWNLOADF)/openssl-$(MECT_SUITE_OPENSSL).tar.gz
	rm -f $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile # NB: there was an old Makefile :(
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile: $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Configure
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && ./Configure \
		--prefix=$(MECT_PREFIX) \
		linux-generic32 shared no-asm -DL_ENDIAN
	@echo "---------> done $@"

$(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/Makefile
	+cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libssl.so.$(MECT_SUITE_OPENSSL_X): $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/libssl.so.$(MECT_SUITE_OPENSSL_X)
	cd $(MECT_SOURCES)/openssl-$(MECT_SUITE_OPENSSL)/ && sudo make install_sw
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- Qt --------- 
.PHONY: qt

MECT_QT_PLATFORM  := linux-mectsuite-desktop
MECT_QT_XPLATFORM := linux-mectsuite-host
MECT_QT_EMBEDDED  := 
MECT_QT_ARCH      :=

qt: \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile \
	$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT) \
	$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT)
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xzf $(MECT_DOWNLOADF)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).tar.gz
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT) && patch -p1 < $(MECT_PATCHES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT).patch
	rsync -Hax $(MECT_MKSPECS)/$(MECT_QT_PLATFORM)/      $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/mkspecs/$(MECT_QT_PLATFORM)/
	rsync -Hax $(MECT_MKSPECS)/$(MECT_QT_XPLATFORM)/      $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/mkspecs/$(MECT_QT_XPLATFORM)/
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile: $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/configure
	# - https://doc.qt.io/archives/qt-4.8/configure-options.html
	# - vedi qt_configure_help.txt vs qt_configure_embedded_help.txt
	# - QtXmlPatterns was requested, but it can't be built due to exceptions being disabled.
	# - qt-everywhere-opensource-src-4.8.7/doc/src/network-programming/ssl.qdoc
	# OPENSSL_LIBS='-L$(MECT_PREFIX)/ssl/lib -lssl -lcrypto'
	#
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ \
		&& ./configure \
		-prefix $(MECT_PREFIX) -prefix-install \
		\
		-release \
		-opensource -confirm-license \
	        -shared \
		-fast \
		-no-largefile \
		-no-system-proxies \
		-no-exceptions \
	        -no-accessibility \
		-no-stl \
		-qt-sql-sqlite \
		-no-sql-odbc \
		-qt-sql-mysql \
	        -no-qt3support \
		-no-xmlpatterns \
		-no-multimedia \
		-audio-backend \
		-no-phonon -no-phonon-backend \
		-no-svg \
		-no-webkit \
		-no-javascript-jit \
		-no-script \
		-no-scripttools \
		-no-declarative \
		-no-declarative-debug \
		-platform $(MECT_QT_PLATFORM) \
		\
		-no-3dnow \
		\
		-qt-zlib \
		-no-libtiff \
		-qt-libpng \
		-no-libmng \
		-qt-libjpeg \
		-openssl \
		-nomake examples -nomake demos \
		-rpath \
		-silent \
		-no-optimized-qmake \
		-no-nis \
		-no-cups \
		-iconv \
		-pch \
		-no-dbus \
		-no-separate-debug-info \
		\
		-embedded $(MECT_QT_EMBEDDED) \
		-xplatform $(MECT_QT_XPLATFORM) \
		-little-endian \
		-host-little-endian \
		-qt-freetype \
		-no-opengl \
		-depths 8,16,18,32 \
		-qt-gfx-qvfb \
		-qt-gfx-linuxfb \
		-qt-gfx-transformed \
		-qt-gfx-vnc \
		-qt-kbd-tty \
		-no-mouse-tslib \
		-no-glib \
		\
		-no-s60 \
		-no-icu \
		# -fontconfig  -qt-mouse-tslib
	@echo "---------> done $@"

$(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/Makefile
	+cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && make -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libQtCore.so.$(MECT_SUITE_QT): $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/lib/libQtCore.so.$(MECT_SUITE_QT)
	cd $(MECT_SOURCES)/qt-everywhere-opensource-src-$(MECT_SUITE_QT)/ && sudo make install
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QWT --------- 
.PHONY: qwt

qwt: \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile \
	$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X) \
	$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro:
	mkdir -p $(MECT_SOURCES)
	tar -C $(MECT_SOURCES) -xjf $(MECT_DOWNLOADF)/qwt-$(MECT_SUITE_QWT).tar.bz2
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && patch -p1 < $(MECT_PATCHES)/qwt_embedded_host.patch
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile: $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/qwt.pro
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && $(MECT_PREFIX)/bin/qmake qwt.pro -spec ${MECT_QT_XPLATFORM}
	@echo "---------> done $@"

$(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/Makefile
	# all: sub-src-all-ordered sub-textengines-all-ordered sub-doc-all-ordered sub-designer-all-ordered sub-examples-all-ordered FORCE
	+cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && make sub-src-all-ordered sub-textengines-all-ordered -j $(shell nproc) # NB: +
	@echo "---------> done $@"

$(MECT_PREFIX)/lib/libqwt.so.$(MECT_SUITE_QWT_X): $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/lib/libqwt.so.$(MECT_SUITE_QWT_X)
	cd $(MECT_SOURCES)/qwt-$(MECT_SUITE_QWT)/ && sudo make install # NB: no INSTALL_ROOT=$(MECT_PREFIX) vedi qwt.patch
	@echo "---------> done $@"

# ----------------------------------------------------------------------------- QtCreator --------- 

# ----------------------------------------------------------------------------- CTE plugin --------- 

# ----------------------------------------------------------------------------- CTC exe --------- 

# ----------------------------------------------------------------------------- ATCM templates --------- 

# ----------------------------------------------------------------------------- ATCM Designer plugins ------

# ----------------------------------------------------------------------------- ATCM target plugins --------- 
.PHONY: qt_plugins

qt_plugins: \
	$(MECT_SOURCES)/qt_atcm.pro \
	$(MECT_SOURCES)/Makefile \
	$(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0 \
	$(MECT_PREFIX)/usr/lib/libATCMplugin.so.1.0.0
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_atcm.pro:
	mkdir -p $(MECT_SOURCES)
	rsync -Hax ../qt_plugins/ $(MECT_SOURCES)/qt_plugins/
	rsync -Hax ../qt_library/ $(MECT_SOURCES)/qt_library/
	cp -a ../qt_environment.pri ../qt_designer_environment.pri $(MECT_SOURCES)/
	cp -a ../qt_atcm.pro $(MECT_SOURCES)/
	cd $(MECT_SOURCES)/ && patch -p1 < $(MECT_PATCHES)/qt_plugins_embedded_host.patch # NB: no cd $(MECT_SOURCES)/qt_plugins/
	@echo "---------> done $@"

$(MECT_SOURCES)/Makefile: $(MECT_SOURCES)/qt_atcm.pro
	cd $(MECT_SOURCES)/ \
		&& $(MECT_PREFIX)/bin/qmake -r qt_atcm.pro  -spec ${MECT_QT_XPLATFORM} \
		   QT_INSTALL_PLUGINS=$(MECT_PREFIX)/plugins \
		   -config store -config trend -config recipe -config alarms \
		   CONFIG+=release DEFINES+=ATCM_VERSION=\"$(MECT_SUITE_RELEASE)\"
	@echo "---------> done $@"

$(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0: $(MECT_SOURCES)/Makefile
	#+cd $(MECT_SOURCES)/ && make -j $(shell nproc) # NB: +
	cd $(MECT_SOURCES)/ && make -j1
	@echo "---------> done $@"

$(MECT_PREFIX)/usr/lib/libATCMplugin.so.1.0.0: $(MECT_SOURCES)/qt_plugins/libATCMplugin.so.1.0.0
	sudo mkdir -p $(MECT_PREFIX)/plugins
	cd $(MECT_SOURCES)/ && sudo make INSTALL_ROOT=$(MECT_PREFIX) install
	@echo "---------> done $@"

# -----------------------------------------------------------------------------
