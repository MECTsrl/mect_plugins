--- qt_plugins.orig/qt_library/ATCMcommon/global_var.h	2024-01-24 17:16:12.122724821 +0000
+++ qt_plugins/qt_library/ATCMcommon/global_var.h	2024-01-29 22:35:01.066117809 +0000
@@ -46,7 +46,9 @@
 
 /* buzzer */
 #define BUZZER      "/dev/buzzer"
+#if 0
 #include <linux/mxs-buzzer.h>
+#endif
 #define BUZZER_DURATION_MS 120
 
 #define ID_PLC_time         5390
--- qt_plugins.orig/qt_library/ATCMcommon/global_functions.cpp	2024-01-24 17:16:12.122724821 +0000
+++ qt_plugins/qt_library/ATCMcommon/global_functions.cpp	2024-01-30 12:59:43.557359052 +0000
@@ -792,25 +792,7 @@
         value = (volume & 0xFF) + (on_cs << 8) + (off_cs << 16) + (replies << 24);
         doWrite(ID_PLC_BUZZER, &value);
     } else {
-        // workaround for old projects
-        static int64_t buzzer_busy_timeout_ms = 0;
-        static int64_t now_ms = 0;
-        struct timespec now;
-
-        /* No buzzer */
-        if (Buzzerfd == -1)
-            return false;
-
-        /* Milliseconds since some time reference */
-        if (clock_gettime(CLOCK_MONOTONIC, &now) != 0)
-            return false;
-        now_ms = now.tv_sec * 1000 + now.tv_nsec / 1000000;
-
-        /* Buzz for duration_ms (if done buzzing). */
-        if (buzzer_busy_timeout_ms <= now_ms) {
-            (void)ioctl(Buzzerfd, BUZZER_BEEP, duration_ms);
-            buzzer_busy_timeout_ms = now_ms + duration_ms;
-        }
+        return false;
     }
     return true;
 }
